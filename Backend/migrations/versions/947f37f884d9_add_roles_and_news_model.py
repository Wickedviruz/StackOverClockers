"""Add roles and news model

Revision ID: 947f37f884d9
Revises: 803c7ab8afb0
Create Date: 2025-01-01 21:43:28.461871

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '947f37f884d9'
down_revision = '803c7ab8afb0'
branch_labels = None
depends_on = None

def upgrade():
    # Skapa Enum-typen user_roles
    user_roles_enum = sa.Enum('user', 'forum_admin', 'news_admin', 'super_admin', name='user_roles')
    user_roles_enum.create(op.get_bind())

    # Lägg till 'role'-kolumnen med ett tillfälligt nullable-tillstånd
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', user_roles_enum, nullable=True, server_default='user'))

    # Sätt värdet för befintliga rader till 'user'
    op.execute("UPDATE \"user\" SET role = 'user'")

    # Ändra kolumnen till NOT NULL
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('role', nullable=False)

    # Ta bort 'is_admin'-kolumnen
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('is_admin')

    # Skapa tabellen 'news'
    op.create_table(
        'news',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=200), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['user.id']),
        sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_column('role')

    op.drop_table('news')
    # ### end Alembic commands ###
